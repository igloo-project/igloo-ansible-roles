- block:

    - name: download plugin {{ plugin.name }}
      maven_artifact:
        artifact_id: "{{ plugin.artifact_id }}"
        group_id: "{{ plugin.group_id }}"
        version: "{{ plugin.version }}"
        classifier: "{{ plugin.classifier | default(omit) }}"
        extension: zip
        repository_url: "{{ plugin.repository_url }}"
        username: "{{ plugin.username | default(omit) }}"
        password: "{{ plugin.password | default(omit) }}"
        dest: "{{ _elasticsearch_plugin_dest }}/{{ _elasticsearch_plugin_filename }}"
      register: artifact
      become: yes
      become_user: root

    - name: plugin folder
      file:
        state: directory
        path: "{{ _elasticsearch_plugins_path }}/{{ plugin.name }}"
        mode: u=rwX
        owner: "{{ _elasticsearch_user }}"
        group: "{{ _elasticsearch_group }}"
      become: yes
      become_user: root

    - name: unarchive plugin
      unarchive:
        src: "{{ _elasticsearch_plugin_dest }}/{{ _elasticsearch_plugin_filename }}"
        remote_src: yes
        dest: "{{ _elasticsearch_plugins_path }}/{{ plugin.name }}"
        owner: "{{ _elasticsearch_user }}"
        group: "{{ _elasticsearch_group }}"
      when: artifact | changed
      notify: elasticsearch.restart
      become: yes
      become_user: root

  when: plugin.artifact_id is defined


- block:

    - name: check plugin {{ plugin.name }}
      stat:
        path: "{{ _elasticsearch_plugins_path }}/{{ plugin.name }}"
      register: plugin_dir

    - name: install plugin {{ plugin.name }}
      shell: "{{ _elasticsearch_install_dest }}/bin/plugin install {{ plugin.name }}"
      when: not plugin_dir.stat.exists
      environment:
        JAVA_HOME: "{{ _elasticsearch_java_home }}"
        CONF_DIR: "{{ _elasticsearch_conf_path }}"
      become: yes
      become_user: "{{ elasticsearch_user }}"

  when: plugin.artifact_id is not defined
