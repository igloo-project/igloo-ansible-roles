- block:
  - name: "postgresql-cluster · check cluster {{ cluster.name }}"
    stat:
      path: "{{ _cluster_configuration }}"
    register: cluster_configuration

  - name: "create {{ cluster.name }}"
    block:
      - name: "postgresql-cluster · create directory {{ cluster.name }}"
        file:
          path: "{{ cluster.path }}"
          state: directory
          owner: "{{ postgresql_cluster_postgres_user }}"
          group: "{{ postgresql_cluster_postgres_user }}"
          mode: u=rwx,g=rwx,o=

      - name: "postgresql-cluster · create {{ cluster.name }}"
        command: "sudo -u postgres {{ _postgresql_initdb | distro(vars) }} --locale={{ _cluster_locale | quote }} --lc-messages=en_US.UTF-8 '{{ cluster.path }}'"
        when:
          - ansible_os_family == 'RedHat'
          - not cluster_configuration.stat.exists

      - name: "postgresql-cluster · create {{ cluster.name }}"
        command: >
          pg_createcluster -u {{ postgresql_cluster_postgres_user | quote }}
          --locale={{ _cluster_locale | quote }} --lc-messages=en_US.UTF-8 -d {{ cluster.path | quote }}
          {{ cluster.postgresql_version | quote }} {{ cluster.name | quote }}
        when:
          - ansible_os_family == 'Debian'
          - not cluster_configuration.stat.exists

  - name: disable postgresql service (debian)
    service:
      name: postgresql
      state: stopped
      enabled: false
    when: ansible_os_family == 'Debian'

  - block:
    - name: "postgresql-cluster · port configuration {{ cluster.name }}"
      lineinfile:
        regexp: "^\\s*port\\s*="
        line: "port = {{ _cluster_port }}"
        dest: "{{ _cluster_configuration }}"
    - name: "postgresql-cluster · unix socket configuration {{ cluster.name }}"
      lineinfile:
        regexp: "^\\s*{{ _unix_socket_directory | regex_escape }}\\s*="
        line: "{{ _unix_socket_directory }} = '/var/run/postgresql'"
        dest: "{{ _cluster_configuration }}"
    - name: "postgresql-cluster · listen configuration {{ cluster.name }}"
      lineinfile:
        regexp: "^\\s*listen_addresses\\s*="
        line: "listen_addresses = '{{ _cluster_listen_addresses }}'"
        dest: "{{ _cluster_configuration }}"
        insertbefore: "^#\\s*listen_addresses\\s*="
    - name: "postgresql-cluster · pg_hba.conf {{ cluster.name }}"
      copy:
        src: pg_hba.conf
        dest: "{{ _cluster_configuration | dirname }}"
        owner: "{{ postgresql_cluster_postgres_user }}"
        group: "{{ postgresql_cluster_postgres_user }}"
        mode: u+r,g+r,o=

  - block:

    - name: "postgresql_cluster · systemctl service's file {{ cluster.name }}"
      template:
        dest: "/etc/systemd/system/{{ _cluster_service }}.service"
        src: postgresql.service.j2
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      register: service_file
      when: ansible_os_family == 'RedHat'

    - name: "postgresql_cluster · systemctl service {{ cluster.name }}"
      systemd:
        name: "{{ _cluster_service }}"
        daemon-reload: "{{ service_file.changed }}"
        state: started
        enabled: yes

    when: _postgresql_systemd

  - block:

    - name: "postgresql_cluster · systemctl service's file {{ cluster.name }}"
      template:
        dest: "/etc/sysconfig/pgsql/{{ _cluster_service }}"
        src: cluster.j2
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      register: service_file

    - name: "postgresql_cluster · initd script"
      file:
        state: link
        src: /etc/init.d/postgresql-{{ cluster.postgresql_version }}
        dest: /etc/init.d/{{ _cluster_service }}

    - name: "postgresql_cluster · enabled service {{ cluster.name }}"
      service:
        name: "{{ _cluster_service }}"
        state: "{{ 'restarted' if service_file.changed else 'started' }}"
        enabled: yes

    when: _postgresql_initd

  become: yes
  become_user: root
  vars:
    _cluster_locale: "{{ cluster.locale | default(postgresql_cluster_default_locale) }}"
    # debian use instance template postgresql@<version>-<cluster>, RedHat a custom file postgresql-<version>-<cluster>
    _cluster_service: "{{ _cluster_service_distro | distro(vars) }}"
    _cluster_service_distro:
      Debian: "postgresql@{{ cluster.postgresql_version }}-{{ cluster.name }}"
      RedHat: "postgresql-{{ cluster.postgresql_version }}-{{ cluster.name }}"
    _cluster_configuration: "{{ _cluster_configuration_distro | distro(vars) }}"
    _cluster_configuration_distro:
      Debian: "/etc/postgresql/{{ cluster.postgresql_version }}/{{ cluster.name }}/postgresql.conf"
      RedHat: "{{ cluster.path }}/postgresql.conf"
    _cluster_port: "{{ cluster.port | default(postgresql_cluster_default_port) }}"
    _unix_socket_directory: "{{ 'unix_socket_directory' if cluster.postgresql_version | version_compare('9.3', '<') else 'unix_socket_directories' }}"
